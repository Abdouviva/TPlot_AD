Réponses questions :
Analyse du fonctionnement de l’ESP8266:
1-Architecture interne de l'ESP8266 : L'ESP8266 est basé sur une architecture à processeur unique Tensilica Xtensa LX106. 
Il dispose d'un processeur 32 bits cadencé à 80 MHz (pouvant être overclocké jusqu'à 160 MHz). Il intègre également une interface Wi-Fi, une unité de traitement numérique du signal (DSP), 
une mémoire flash embarquée et une RAM.
2-Protocoles de communication : L'ESP8266 prend en charge les protocoles de communication Wi-Fi, TCP/IP et UDP. Il peut être utilisé pour établir des connexions Wi-Fi, créer des serveurs HTTP,
envoyer des requêtes HTTP, etc.
3-Mise à jour du firmware : Le firmware de l'ESP8266 peut être mis à jour de plusieurs façons. Cela peut se faire via USB en utilisant un programmeur approprié tel qu'un programmateur FTDI ou CP2102. 
La mise à jour peut également être effectuée via le réseau Wi-Fi en utilisant des bibliothèques comme "ArduinoOTA" qui permettent de téléverser le firmware sur l'ESP8266 sans fil.
4-Limites de mémoire : L'ESP8266 dispose généralement de 4 Mo de mémoire flash intégrée pour le stockage du programme (le firmware) et des données. En ce qui concerne la RAM, il dispose de 80 Ko d'IRAM 
(Instruction RAM) et de 50 Ko de DRAM (Data RAM). Cependant, une partie de la DRAM est réservée au système, laissant environ 32 Ko disponibles pour l'utilisateur.
5-Mise en veille profonde pour économiser l'énergie : L'ESP8266 peut être mis en veille profonde pour économiser de l'énergie lorsqu'il n'est pas utilisé. En mode veille profonde, la plupart des composants
du microcontrôleur sont éteints, sauf pour l'horloge en temps réel (RTC) et un petit circuit qui détecte les interruptions externes (comme un bouton-poussoir). Cette fonctionnalité est très intéressante 
pour les projets IoT car elle permet d'étendre considérablement la durée de vie de la batterie dans les dispositifs alimentés par batterie.
6-Configuration d'un serveur Web sur l'ESP8266 : Pour configurer un serveur Web sur l'ESP8266, tu peux utiliser des bibliothèques comme ESP8266WebServer. Cette bibliothèque te permet de créer un serveur Web
sur l'ESP8266 et de définir des gestionnaires pour différents chemins d'URL. Tu peux alors envoyer des réponses HTML, JSON ou tout autre contenu dynamique en fonction des requêtes HTTP reçues.
7-Communication TCP/IP : L'ESP8266 prend en charge la communication TCP/IP via la bibliothèque WiFiClient. Avec cette bibliothèque, tu peux établir des connexions TCP avec d'autres dispositifs 
sur un réseau IP, tels que des serveurs Web, des serveurs TCP personnalisés, etc.
8-Utilisation du protocole MQTT : Pour utiliser le protocole MQTT sur l'ESP8266, tu peux utiliser des bibliothèques comme PubSubClient. Cette bibliothèque te permet de connecter l'ESP8266 à un courtier MQTT
et de publier ou de souscrire à des messages MQTT. Cela facilite la communication dans un environnement IoT où plusieurs appareils doivent échanger des données de manière asynchrone.
9-Communication Bluetooth Low Energy (BLE) : L'ESP8266 ne prend pas en charge nativement le BLE. Cependant, tu peux ajouter cette fonctionnalité en utilisant un module BLE externe ou en utilisant 
une bibliothèque logicielle comme BLEPeripheral ou NobleESP8266 pour émuler un périphérique BLE.
10-Communication série : L'ESP8266 dispose de plusieurs broches GPIO qui peuvent être utilisées pour la communication série (UART). Tu peux utiliser des bibliothèques comme Serial ou SoftwareSerial 
pour configurer et communiquer via les ports série.
11-Communication sécurisée avec SSL/TLS : L'ESP8266 prend en charge SSL/TLS via la bibliothèque WiFiClientSecure. Cette bibliothèque te permet d'établir des connexions sécurisées HTTPS 
ou MQTT sécurisées avec des serveurs distants.
12-Intégration dans un réseau de capteurs sans fil (WSN) : Pour intégrer l'ESP8266 dans un réseau de capteurs sans fil, tu peux utiliser des protocoles comme MQTT ou HTTP pour la communication 
avec un concentrateur central. Chaque ESP8266 peut être configuré en tant que nœud du réseau de capteurs, collectant et transmettant des données vers le concentrateur.
13-Utilisation du protocole OTA (Over-The-Air) : Pour mettre à jour le firmware de l'ESP8266 à distance, tu peux utiliser la fonctionnalité OTA intégrée dans la plateforme Arduino. 
Avec cette fonctionnalité, tu peux téléverser de nouveaux firmwares sur l'ESP8266 via le réseau Wi-Fi, sans avoir besoin de le connecter physiquement à un ordinateur.
